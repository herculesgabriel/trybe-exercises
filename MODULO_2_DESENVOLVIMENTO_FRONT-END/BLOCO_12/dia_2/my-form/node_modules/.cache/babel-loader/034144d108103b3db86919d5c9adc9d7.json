{"ast":null,"code":"// const fetch = require('node-fetch');\nimport fetch from 'node-fetch';\nconst URL = 'https://servicodados.ibge.gov.br/api/v1/localidades/estado';\nconst states = [];\n\nconst fetchData = async () => {\n  const data = await fetch(URL).then(response => response.json());\n};\n\nconst getStates = async () => await fetchData().then(res => doSom(res));\n\nconst doSom = res => res.then(data => data.forEach(state => {\n  states.push(state);\n\n  if (states.length > 0) {\n    console.log('entrei');\n    return states;\n  }\n\n  ;\n  return new Error('Erro ao consultar estados. Por favor, recarregue a página.');\n}));\n\nexport default getStates;","map":{"version":3,"sources":["/home/herculesgabriel/Documents/Projects/Trybe/trybe-exercises/MODULO_2_DESENVOLVIMENTO_FRONT-END/BLOCO_12/dia_2/my-form/src/services/api_states.js"],"names":["fetch","URL","states","fetchData","data","then","response","json","getStates","res","doSom","forEach","state","push","length","console","log","Error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,MAAMC,GAAG,GAAG,4DAAZ;AAEA,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAMC,SAAS,GAAG,YAAY;AAE5B,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACC,GAAD,CAAL,CAChBI,IADgB,CACXC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADD,CAAnB;AAKD,CAPD;;AASA,MAAMC,SAAS,GAAG,YAAY,MAAML,SAAS,GAAGE,IAAZ,CAAiBI,GAAG,IAAIC,KAAK,CAACD,GAAD,CAA7B,CAApC;;AAEA,MAAMC,KAAK,GAAID,GAAD,IAASA,GAAG,CAACJ,IAAJ,CAASD,IAAI,IAAIA,IAAI,CAACO,OAAL,CAAcC,KAAD,IAAW;AAC9DV,EAAAA,MAAM,CAACW,IAAP,CAAYD,KAAZ;;AAEA,MAAIV,MAAM,CAACY,MAAP,GAAgB,CAApB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAOd,MAAP;AACD;;AAAA;AAED,SAAO,IAAIe,KAAJ,CAAU,4DAAV,CAAP;AACD,CATuC,CAAjB,CAAvB;;AAWA,eAAeT,SAAf","sourcesContent":["// const fetch = require('node-fetch');\nimport fetch from 'node-fetch';\nconst URL = 'https://servicodados.ibge.gov.br/api/v1/localidades/estado';\n\nconst states = [];\nconst fetchData = async () => {\n\n  const data = await fetch(URL)\n    .then(response => response.json());\n\n\n\n};\n\nconst getStates = async () => await fetchData().then(res => doSom(res))\n\nconst doSom = (res) => res.then(data => data.forEach((state) => {\n  states.push(state);\n\n  if (states.length > 0) {\n    console.log('entrei')\n    return states\n  };\n\n  return new Error('Erro ao consultar estados. Por favor, recarregue a página.')\n}))\n\nexport default getStates;"]},"metadata":{},"sourceType":"module"}