const MainMemory = require('./MainMemory');
const SecondaryMemory = require('./SecondaryMemory');

const mainMemory = new MainMemory();
const secondaryMemory = new SecondaryMemory();

// conjunto de números aleatórios a serem somados
const randomNumbers = [
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300',
  '36912',
  '84300'
];

// carregando todos os números em memória principal e secundária
randomNumbers.forEach(number => {
  mainMemory.load(number);
  secondaryMemory.load(number);
});

// iterando sobre os números carregados em memória principal e somando
const initialMemoryTime = Date.now();
let mainMemorySum = 0;

for (let index = 0; index < randomNumbers.length; index++) {
  mainMemorySum += mainMemory.get(index);
}

console.log(
  `Memória principal
Soma: ${mainMemorySum} Tempo gasto: ${Date.now() - initialMemoryTime}ms`
);

// iterando sobre os números carregados em memória secundária e somando
const initialSecondaryMemoryTime = Date.now();
let secondaryMemorySum = 0;

for (let index = 0; index < randomNumbers.length; index++) {
  secondaryMemorySum += secondaryMemory.get(index);
}

console.log(
  `Memória Secundária
Soma: ${secondaryMemorySum} Tempo gasto: ${Date.now() - initialSecondaryMemoryTime}ms`
);
